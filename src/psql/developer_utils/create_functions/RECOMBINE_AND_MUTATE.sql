CREATE OR REPLACE FUNCTION RECOMBINE_AND_MUTATE(EXPERIMENT_GROUP_ID BIGINT, PARENT_EXPERIMENT_ALPHA BIGINT, PARENT_EXPERIMENT_BETA BIGINT) RETURNS BIGINT
AS
$$
DECLARE NEW_EXPERIMENT_ID BIGINT;
BEGIN
	-- CREATE THE NEW EXPERIMENT
	INSERT INTO EXPERIMENT
	(
		EXPERIMENT_GROUP_ID,
		EXPERIMENT_PARENT_ALPHA,
		EXPERIMENT_PARENT_BETA
	)
	VALUES
	(
		EXPERIMENT_GROUP_ID,
		PARENT_EXPERIMENT_ALPHA,
		PARENT_EXPERIMENT_BETA
	)
	RETURNING ID INTO NEW_EXPERIMENT_ID;
	
	INSERT INTO PARAMETER
	(
		EXPERIMENT_ID,
		PARAMETER_TYPE_ID,
		PARAMETER_VALUE
		
	)
	SELECT
		NEW_EXPERIMENT_ID,
		PAR_ALPHA.PARAMETER_TYPE_ID,
		-- RECOMBINE:
		CASE 
			WHEN RANDOM() < .5
			THEN PAR_ALPHA.PARAMETER_VALUE
			ELSE PAR_BETA.PARAMETER_VALUE
		END

		-- MUTATE, BASED ON MAGNITUDE OF DIFFERENCE BETWEEN PARENT VALUES
		+ (RANDOM())*(RANDOM()-.5) * ABS(PAR_ALPHA.PARAMETER_VALUE - PAR_BETA.PARAMETER_VALUE)

	FROM
		EXPERIMENT EXP
	JOIN
		PARAMETER PAR_ALPHA
	ON
		PAR_ALPHA.EXPERIMENT_ID = EXP.EXPERIMENT_PARENT_ALPHA
	JOIN
		PARAMETER PAR_BETA
	ON
		PAR_BETA.EXPERIMENT_ID = EXP.EXPERIMENT_PARENT_BETA
	AND
		PAR_BETA.PARAMETER_TYPE_ID = PAR_ALPHA.PARAMETER_TYPE_ID
	WHERE
		EXP.ID = NEW_EXPERIMENT_ID;

	RETURN NEW_EXPERIMENT_ID;
		
END
$$
LANGUAGE PLPGSQL
